"""Initial migration with password

Revision ID: d3d26bf18989
Revises: 
Create Date: 2025-04-24 08:42:23.085361

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd3d26bf18989'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('enterprise',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('model_version',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('version_tag', sa.String(length=50), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('accuracy', sa.Float(), nullable=True),
    sa.Column('trained_on', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('version_tag')
    )
    op.create_table('monitoring_metric',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('model_version_id', sa.Integer(), nullable=True),
    sa.Column('metric_name', sa.String(length=255), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('recorded_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['model_version_id'], ['model_version.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('enterprise_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('user', 'admin'), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['enterprise_id'], ['enterprise.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('api_access_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('endpoint', sa.String(length=255), nullable=True),
    sa.Column('method', sa.String(length=10), nullable=True),
    sa.Column('status_code', sa.Integer(), nullable=True),
    sa.Column('auth_result', sa.Enum('success', 'fail'), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('incident_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reported_by', sa.Integer(), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('error_type', sa.String(length=255), nullable=True),
    sa.Column('status', sa.Enum('open', 'resolved'), nullable=True),
    sa.Column('resolution_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['reported_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('retraining_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('model_version_id', sa.Integer(), nullable=True),
    sa.Column('triggered_by', sa.Integer(), nullable=True),
    sa.Column('log', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('success', 'failed', 'pending'), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['model_version_id'], ['model_version.id'], ),
    sa.ForeignKeyConstraint(['triggered_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('test_run',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('run_date', sa.DateTime(), nullable=True),
    sa.Column('result', sa.Enum('pass', 'fail'), nullable=True),
    sa.Column('triggered_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['triggered_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ticket',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('subject', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('open', 'closed', 'pending'), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('message',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ticket_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['ticket_id'], ['ticket.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('test_case',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('test_run_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('result', sa.Enum('pass', 'fail'), nullable=True),
    sa.Column('details', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['test_run_id'], ['test_run.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ticket_user',
    sa.Column('ticket_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=True),
    sa.Column('joined_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['ticket_id'], ['ticket.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('ticket_id', 'user_id')
    )
    op.create_table('prediction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('message_id', sa.Integer(), nullable=True),
    sa.Column('sentiment', sa.Enum('positive', 'neutral', 'negative'), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('model_version_id', sa.Integer(), nullable=True),
    sa.Column('predicted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['message_id'], ['message.id'], ),
    sa.ForeignKeyConstraint(['model_version_id'], ['model_version.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('message_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('prediction')
    op.drop_table('ticket_user')
    op.drop_table('test_case')
    op.drop_table('message')
    op.drop_table('ticket')
    op.drop_table('test_run')
    op.drop_table('retraining_log')
    op.drop_table('incident_log')
    op.drop_table('api_access_log')
    op.drop_table('user')
    op.drop_table('monitoring_metric')
    op.drop_table('model_version')
    op.drop_table('enterprise')
    # ### end Alembic commands ###

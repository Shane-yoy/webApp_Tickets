name: CI Docker Flask App

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout le code
      uses: actions/checkout@v4

    - name: Connaitre la version de Docker
      run: docker --version

    - name: Créer un .env temporaire pour la CI
      run: |
        echo "DATABASE_URL=mysql+pymysql://root:root@db/mydatabase" > .env
        echo "SECRET_KEY=fake_secret_for_ci" >> .env
        echo "JWT_SECRET_KEY=fake_jwt_secret_for_ci" >> .env
        echo "JWT_ACCESS_TOKEN_EXPIRES=3600" >> .env
        echo "CELERY_BROKER_URL=redis://redis:6379/0" >> .env
        echo "CELERY_RESULT_BACKEND=redis://redis:6379/0" >> .env

    - name: Build du docker-compose
      run: docker compose -f docker-compose.yml build

    - name: Vérifier que les containers démarrent
      run: docker compose -f docker-compose.yml up -d

    - name: Installer les dépendances Python pour les tests
      run: |
        pip install pytest pytest-cov

    - name: Lancer les tests unitaires existants
      run: |
        pytest tests/ --cov=app --cov-report=term-missing

    - name: Lister les containers en fonctionnement
      run: docker ps

    - name: Stopper les containers
      run: docker compose -f docker-compose.yml down
